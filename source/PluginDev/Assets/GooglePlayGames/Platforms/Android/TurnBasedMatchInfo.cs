//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;
using System.Collections;
using System.Text;

namespace GooglePlayGames
{
	public class TurnBasedMatchInfo
	{

		public string Guid { get; private set; }
		public List<string> ParticipantIds { get; private set; }	
		public List<string> ParticipantDisplayNames { get; private set; }
		public List<string> PlayerIds { get; private set; }
		public string PendingParticipantId { get; private set; }
		public byte[] CurrentData { get; private set; }

		public TurnBasedMatchInfo( string guid, List<string> participantId,
		                          List<string> participantDisplayName, List<string> playerId, 
		                          string pendingParticipantId, byte[] currentData )
		{
			Guid = String.Copy( guid );
			ParticipantIds = new List<String>( participantId );
			ParticipantDisplayNames = new List<String>( participantDisplayName );
			PlayerIds = new List<String>( playerId );
			PendingParticipantId = String.Copy( pendingParticipantId );
			CurrentData = ( byte[] )currentData.Clone();
		}

		public TurnBasedMatchInfo ( AndroidJavaObject turnBasedMatch ) 
		{
			Guid = turnBasedMatch.Call<string>( "getMatchId" );

			AndroidJavaObject arrayListParticipantIdsJNI = turnBasedMatch.Call<AndroidJavaObject>( "getParticipantIds" );

			AndroidJavaObject arrayParticipantIdsJNI = arrayListParticipantIdsJNI.Call<AndroidJavaObject>("toArray");
			
			string[] arrayParticipantIdsCSharp = AndroidJNIHelper.ConvertFromJNIArray<string[]>( arrayParticipantIdsJNI.GetRawObject() );
			
			ParticipantIds = new List<string>( arrayParticipantIdsCSharp );

			ParticipantDisplayNames = new List<string>();
			PlayerIds = new List<string>();
			foreach ( string participantId in ParticipantIds )
			{
				//public Participant getParticipant (String participantId)
				AndroidJavaObject participant = turnBasedMatch.Call<AndroidJavaObject>("getParticipant", participantId );
				//public abstract String getDisplayName ()
				ParticipantDisplayNames.Add( participant.Call<string>("getDisplayName") );
				//public abstract Player getPlayer ()
				AndroidJavaObject player = participant.Call<AndroidJavaObject>("getPlayer");
				//public abstract String getPlayerId ()
				PlayerIds.Add (player.Call<string>("getPlayerId") );
			}

			PendingParticipantId = turnBasedMatch.Call<string>("getPendingParticipantId"); 


			try
			{
				AndroidJavaObject dataJNI = turnBasedMatch.Call<AndroidJavaObject>("getData");
				if ( dataJNI.GetRawObject().ToInt32() != 0 ) 
				{
					CurrentData = AndroidJNIHelper.ConvertFromJNIArray<byte[]>( dataJNI.GetRawObject() );
				}
			}
			catch ( Exception )
			{
				CurrentData = null;
			}
		}

		override public string ToString()
		{
			StringBuilder stringBuilder = new StringBuilder();
			stringBuilder.AppendLine( "GUID: " + Guid );
			stringBuilder.AppendLine( "PendingParticipanID: " + PendingParticipantId );
			
			
			for ( int i=0; i< ParticipantIds.Count; i++)
			{
				stringBuilder.AppendLine( "**************************" );
				stringBuilder.AppendLine( "ParticipantID: " + ParticipantIds[i]);
				stringBuilder.AppendLine( "PlayerId: " + PlayerIds[i]);
				stringBuilder.AppendLine( "DisplayName: " + ParticipantDisplayNames[i]);
			}
			stringBuilder.AppendLine( "**************************" );

			if (CurrentData != null )
			{
				stringBuilder.AppendLine("Data:" + System.Text.Encoding.UTF8.GetString(CurrentData));
			}
			else
			{
				stringBuilder.AppendLine("Data: null");
			}
			return stringBuilder.ToString();
		}


		public bool IsPendingParticipantLoggedInPlayer()
		{
			for ( int i=0; i< ParticipantIds.Count; i++)
			{
				if ( PlayerIds[i] == Social.Active.localUser.id )
				{
					return PendingParticipantId == ParticipantIds[i] ;
				}
			}

			return false;
		}
	}
}

